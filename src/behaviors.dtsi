/ {
    behaviors {
        // General
        media: airpods_media {
            compatible = "zmk,behavior-tap-dance";
            label = "airpods-like media key";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREVIOUS>;
        };
        pgdnend: pg_dn_or_end {
            compatible = "zmk,behavior-tap-dance";
            label = "page down or END";
            #binding-cells = <0>;
            bindings = <&kp PG_DN>, <&kp END>;
        };
        pguphome: pg_up_or_home {
            compatible = "zmk,behavior-tap-dance";
            label = "page up or HOME";
            #binding-cells = <0>;
            bindings = <&kp PG_UP>, <&kp HOME>;
        };
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "escape or graves";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rhsthumb: backspace_letter_word {
            compatible = "zmk,behavior-mod-morph";
            label = "backspace letter or word";
            #binding-cells = <0>;
            bindings = <&lt 2 BSPC>, <&lt 2 LA(BSPC)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        snipping: snipping_arc {
            compatible = "zmk,behavior-mod-morph";
            label = "generic snipping tool or arc snipping tool";
            #binding-cells = <0>;
            bindings = <&macosst>, <&arcst>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        // Amethyst Mod Morphs
        layouts: swithc_main_or_layout {
            compatible = "zmk,behavior-mod-morph";
            label = "switch main or layout";
            #binding-cells = <0>;
            bindings = <&swap_main>, <&cycle_layout>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        amethystleft: amethyst_left {
            compatible = "zmk,behavior-mod-morph";
            label = "cycle or expand left";
            #binding-cells = <0>;
            bindings = <&swap_ccw>, <&decrease_main>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        amethystright: amethyst_right {
            compatible = "zmk,behavior-mod-morph";
            label = "cycle or expand right";
            #binding-cells = <0>;
            bindings = <&swap_cw>, <&enlarge_main>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };


        // Arc Mod Morphs
        nextts: next_tab_space {
            compatible = "zmk,behavior-mod-morph";
            label = "next arc tab or next arc space";
            #binding-cells = <0>;
            bindings = <&next_tab>, <&next_space>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        prevts: prev_tab_space {
            compatible = "zmk,behavior-mod-morph";
            label = "previous arc tab or previous arc space";
            #binding-cells = <0>;
            bindings = <&prev_tab>, <&prev_space>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Auto-completion Mod Morphs
        sqtdqt: sqt_dqt {
            compatible = "zmk,behavior-mod-morph";
            label = "autocompleting single or double quotes";
            #binding-cells = <0>;
            bindings = <&autosqt>, <&autodqt>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        commaangle: comma_angle {
            compatible = "zmk,behavior-mod-morph";
            label = "autocompleting comma or angle";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&autoangle>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Auto-completion Tap Dances
        autoparen: auto_paren {
            compatible = "zmk,behavior-tap-dance";
            label = "autocompleting parenthesis";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&m_parent>;
        };
        autocurly: auto_curly {
            compatible = "zmk,behavior-tap-dance";
            label = "autocompleting curly braces";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&m_crly_bracket>;
        };
        autosquare: auto_square {
            compatible = "zmk,behavior-tap-dance";
            label = "autocompleting square braces";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&m_sqr_bracket>;
        };
        autoangle: auto_angle {
            compatible = "zmk,behavior-tap-dance";
            label = "autocompleting angled braces";
            #binding-cells = <0>;
            bindings = <&kp LT>, <&m_angle_bracket>;
        };
        autosqt: auto_single_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "autocompleting double quote";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&m_single_quote>;
        };
        autodqt: auto_double_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "autocompleting single quote";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&m_double_quote>;
        };
    };
};